#!/bin/bash
################################################################################
# Bashor Framework
#
# LICENSE:
# This software is released under the GNU Lesser General Public License version 3
# http://www.gnu.org/licenses/lgpl.html
# http://www.gnu.de/documents/lgpl.de.html
#
# @package      Bashor
# @subpackage   Tests
# @copyright    Copyright (c) 2010 Lars Dietrich, All rights reserved.
# @license      http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License version 3
# @autor        Lars Dietrich <lars@dietrich-hosting.de>
# @version      $Id$
################################################################################

BASE_DIR=`echo "$BASH_SOURCE" | sed 's#/\?[^/]*$##' | sed 's#^./##'`;
if [[ ! "$BASE_DIR" =~ ^/ ]]; then
    BASE_DIR=`echo "$PWD/$BASE_DIR" | sed 's#/\.\?$##'`;
fi
export TEST_DIR="$BASE_DIR/../test";
export TEST_TEMP_DIR="$TEST_DIR/temp";
export TEST_RESOURCE_DIR="$TEST_DIR/resource";

. "$BASE_DIR/../loader.sh";

export BASHOR_LOG_FILE="$TEST_TEMP_DIR/log.log";
export BASHOR_PATHS_CLASS="${TEST_DIR}/mock:${BASHOR_PATHS_CLASS}";

loadClassOnce 'Null';
echo -n 'CLASS: ';
SECONDS=0;
for i in `seq 10000`; do
    class Null null
done
echo $SECONDS;

echo -n 'OBJ CALL: ';
new Null Null
SECONDS=0;
for i in `seq 10000`; do
    object $Null null
done
echo $SECONDS;
remove $Null

echo -n 'OBJ NEW/REMOVE: ';
SECONDS=0;
for i in `seq 1000`; do
    new Null Null
    remove $Null
done
echo $SECONDS;

loadClassOnce 'Bashor_List_Data';
echo -n 'OBJ PARALLEL NEW: ';
SECONDS=0;
for i in `seq 500`; do
    new Bashor_List_Data 'Data_'"$i"
done
echo $SECONDS;

echo -n 'OBJ PARALLEL SET: ';
SECONDS=0;
for i in `seq 500`; do
    p='Data_'"$i"
    p="${!p}"
    object "$p" set 'test' 't'"$i"
done
echo $SECONDS;

echo -n 'OBJ PARALLEL GET: ';
SECONDS=0;
for i in `seq 500`; do
    p='Data_'"$i"
    p="${!p}"
    out="`object "$p" get 'test' 't'"$i"`"
    #[ "$out" == 't'"$i" ] || echo 'ERROR ON t'"$i" >&2
done
echo $SECONDS;

echo -n 'OBJ PARALLEL SERIALIZE: ';
SECONDS=0;
for i in `seq 500`; do
    p='Data_'"$i"
    p="${!p}"
    tmp="`serialize "$p"`"
    unserialize 'Data_'"$i" "$tmp"
done
echo $SECONDS;

echo -n 'OBJ PARALLEL GET: ';
SECONDS=0;
for i in `seq 500`; do
    p='Data_'"$i"
    p="${!p}"
    out="`object "$p" get 'test' 't'"$i"`"
    #[ "$out" == 't'"$i" ] || echo 'ERROR ON t'"$i" >&2
done
echo $SECONDS;

echo -n 'OBJ PARALLEL REMOVE: ';
SECONDS=0;
for i in `seq 500`; do
    p='Data_'"$i"
    remove "${!p}"
done
echo $SECONDS;

