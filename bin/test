#!/bin/bash
################################################################################
# Bashor Framework
#
# LICENSE:
# This software is released under the GNU Lesser General Public License version 3
# http://www.gnu.org/licenses/lgpl-3.0.txt
#
# Copyright 2010-2013 the bashor project authors. All rights reserved.
################################################################################

BASE_DIR=`echo "$BASH_SOURCE" | sed 's#/\?[^/]*$##' | sed 's#^./##'`;
if [[ ! "$BASE_DIR" =~ ^/ ]]; then
    BASE_DIR=`echo "$PWD/$BASE_DIR" | sed 's#/\.\?$##'`;
fi
export TEST_DIR="$BASE_DIR/../test";
export TEST_TEMP_DIR="$TEST_DIR/temp";
export TEST_RESOURCE_DIR="$TEST_DIR/resource";
export TESTS_FAIL='0';
export TESTS_OK='0';

. "$BASE_DIR/../loader.sh";

export BASHOR_LOG_FILE="$TEST_TEMP_DIR/log.log";

export BASHOR_PATHS_CLASS="${TEST_DIR}/mock:${BASHOR_PATHS_CLASS}";

doTest()
{
    echo "##### Test: $1 #####";
    . "${TEST_DIR}/${1}.sh";

    if [ -d "$TEST_TEMP_DIR/" ]; then
        rm -rf "$TEST_TEMP_DIR/"*
    fi
}

printFinalResult()
{    
    if [ 0 == "$TESTS_FAIL" ]; then
        local res=`echo -en '\033[1;32mOK ('"$TESTS_OK"') in '"$SECONDS"'s\033[0m'`
    else
        local res=`echo -en '\033[1;31mTESTS FAIL ('"$TESTS_FAIL"') in '"$SECONDS"'s\033[0m'`;
    fi
    printf '\nRESULT: %s\n' "$res";
}

printResult()
{
    local res="$2";
    if [ -n "$3" ]; then
        local res=`echo "$res" | tr '01' '10'`;
    fi
    if [ 0 == "$res" ]; then
        local res=`echo -en '\033[1;32mOK   \033[0m'`
        ((TESTS_OK++));
    else
        local res=`echo -en '\033[1;31mERROR\033[0m'`;
        ((TESTS_FAIL++));
    fi
    printf '%s : %s\n' "$res" "$1";
}

checkSimple()
{
    [ "$2" == "$3" ];
    printResult "$1" "$?" "$4";
}

checkRegex()
{
    echo "$2" | grep "$3" > /dev/null;
    printResult "$1" "$?" "$4";
}

checkRegexLines()
{
    local res=`echo "$2" | grep "$3" | wc -l`;
    [ "$res" == "$4" ];
    printResult "$1" "$?";
}

SECONDS=0

doTest 'include/functions/class';
doTest 'include/functions/Getopt';
doTest 'include/functions/Getopts';

doTest 'lib/Class';
doTest 'lib/Bashor/Object';
doTest 'lib/Bashor/List';
doTest 'lib/Bashor/List/Iterable';
doTest 'lib/Bashor/Param';
doTest 'lib/Bashor/Cache/File';
doTest 'lib/Bashor/Color';
doTest 'lib/Bashor/Lock';
doTest 'lib/Bashor/Hash';
doTest 'lib/Bashor/Math';
doTest 'lib/Bashor/Registry';
doTest 'lib/Bashor/Data';
doTest 'lib/Bashor/Session';
doTest 'lib/Bashor/String';
doTest 'lib/Bashor/Log';
doTest 'lib/Bashor/Escape';
doTest 'lib/Bashor/Temp';
doTest 'lib/Bashor/Terminal';
doTest 'lib/Bashor/Config/Ini';
doTest 'lib/Bashor/Reflection/Class';
doTest 'lib/Bashor/Reflection/Property';
doTest 'lib/Bashor/Reflection/Method';

printFinalResult;
