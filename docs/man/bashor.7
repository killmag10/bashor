
.\"
.\" Man page for Bashor
.\"
.TH Bashor 7 "2012-06-04" "Lars Dietrich" "Bashor Coding Commands"
.SH Bashor
.B Bashor
\- an pseudo object extension for bash

.PD 0


.SH GENERAL FUNCTIONS
.TP
.B bufferStream()
.RS
.HP
Buffer a stream completly otherwise it will trow a error.
.HP
.B &0
.I mixed
input
.HP
.B &1
.I mixed
output
.HP

.HP

.RE

.TP
.B checkParams()
.RS
.HP
Check if the Params are correct.
.HP
Config String:
.HP
R     Is set and not empty
.HP
S     Is set
.HP
Example: checkParams RS "$@"
.HP
.B $1
.I string
Config String
.HP
.B $@
.I mixed
All Params
.HP

.HP

.RE

.TP
.B copyFunction()
.RS
.HP
Copy a function
.HP
.B $1
.I string
current function name
.HP
.B $2
.I string
new function name
.HP

.HP

.RE

.TP
.B debug()
.RS
.HP
debug message
.HP
.B $1
.I string
message
.HP
.B &3
.I string
debug messages
.RE

.TP
.B error()
.RS
.HP
error message
.HP
.B $1
.I string
message
.HP
.B $2
.I integer|null
return value for exit default=1
.HP
.B &3
.I string
error messages
.RE

.TP
.B getBacktrace()
.RS
.HP
Get a baacktrace to the current file.
.HP
.B $1
.I integer
lines to remove
.HP
.B &1
.I string
files with line number per line
.HP

.HP

.RE

.TP
.B __handleError()
.RS
.HP
Error handler call
.HP
.B $1
.I string
type
.HP
.B $2
.I string
message
.HP
.B $3
.I integer|null
return value for exit default=1
.HP
.B $4
.I string
Backtrace
.HP
.B &3
.I string
error messages
.HP

.HP

.RE

.TP
.B inList()
.RS
.HP
Check if's a value is in the array.
.HP
.B $1
.I mixed
search
.HP
.B $@
.I mixed
list of values
.HP

.HP

.RE

.TP
.B isset()
.RS
.HP
Isset a var | function
.HP
.B $1
.I string
the type (var|function)
.HP
.B $2
.I string
name
.HP

.HP

.RE

.TP
.B issetFunction()
.RS
.HP
Isset a function
.HP
.B $1
.I string
name
.HP

.HP

.RE

.TP
.B issetVar()
.RS
.HP
Isset a var
.HP
.B $1
.I string
name
.HP

.HP

.RE

.TP
.B prepareOutput()
.RS
.HP
Add a prefix for each line.
.HP
.B $1
.I string
prefix
.HP
.B &0
.I string
input
.HP
.B &1
.I string
prepared input
.HP

.HP

.RE

.TP
.B renameFunction()
.RS
.HP
Rename a function
.HP
.B $1
.I string
current function name
.HP
.B $2
.I string
new function name
.HP

.HP

.RE

.TP
.B requireParams()
.RS
.HP
Check if the Params are correct otherwise it will trow a error.
.HP
Config String:
.HP
R     Is set and not empty
.HP
S     Is set
.HP
Example: requireParams RS "$@"
.HP
.B $1
.I string
Config String
.HP
.B $@
.I mixed
All Params
.HP

.HP

.RE

.TP
.B warning()
.RS
.HP
warning message
.HP
.B $1
.I string
message
.HP
.B &3
.I string
warning messages
.RE

.SH CLASS / OBJECT FUNCTIONS
.TP
.B addClass()
.RS
.HP
Add Class functions.
.HP
.B $1
.I string
class
.HP
.B $@
.I mixed
params
.HP

.HP

.RE

.TP
.B __autoloadClass()
.RS
.HP
Autoloader for Classes
.HP
.B $1
.I string
class
.HP

.HP

.RE

.TP
.B class()
.RS
.HP
Call a class method
.HP
.B $1
.I string
class name
.HP
.B $2
.I string
function name
.HP
.B $@
.I mixed
method params
.HP

.RE

.TP
.B classExists()
.RS
.HP
Check if a class exists.
.HP
.B $1
.I string
class name
.HP

.HP

.RE

.TP
.B clone()
.RS
.HP
Clone object.
.HP
.B $1
.I string
object name
.HP
.B $2
.I string
object name
.HP

.RE

.TP
.B extends()
.RS
.HP
Extends a class.
.HP
.B $1
.I string
class name
.HP
.B $2
.I string
parent class name
.HP

.HP

.RE

.TP
.B __hookClassRouter()
.RS
.HP
Hook for class routing.
.HP
.B $CLASS_NAME
.I string
class name what will be call
.HP

.HP

.RE

.TP
.B inObject()
.RS
.HP
Check if you are in a object call.
.HP

.HP

.RE

.TP
.B inStatic()
.RS
.HP
Check if you are in a static call.
.HP

.HP

.RE

.TP
.B isObject()
.RS
.HP
Check if it is a Pointer of a object.
.HP
.B $1
.I mixed
string to check
.HP

.HP

.RE

.TP
.B loadClass()
.RS
.HP
Load class.
.HP
.B $1
.I string
namespace
.HP

.HP

.RE

.TP
.B loadClassOnce()
.RS
.HP
Load class once.
.HP
.B $1
.I string
namespace
.HP

.HP

.RE

.TP
.B new()
.RS
.HP
Create a new object from class.
.HP
.B $1
.I string
class name
.HP
.B $2
.I string
var name
.HP
.B $@
.I mixed
method params
.HP

.HP

.RE

.TP
.B object()
.RS
.HP
Call a object method
.HP
.B $1
.I string
pointer
.HP
.B $2
.I string
function name
.HP
.B $@
.I mixed
method params
.HP

.RE

.TP
.B parent()
.RS
.HP
Access to the parent class.
.HP
.B $1
.I string
action (call,exists)
.HP
.B $@
.I mixed
params
.HP

.RE

.TP
.B remove()
.RS
.HP
Remove a object.
.HP
.B $1
.I tring
pointer
.HP

.HP

.RE

.TP
.B requireObject()
.RS
.HP
Check if you are in a object call otherwise it will trow a error.
.HP

.HP

.RE

.TP
.B requireStatic()
.RS
.HP
Check if you are in a static call otherwise it will trow a error.
.HP

.HP

.RE

.TP
.B serialize()
.RS
.HP
Serialize a object.
.HP
.B $1
.I string
pointer
.HP
.B &1
.I string
serialized data
.HP

.HP

.RE

.TP
.B static()
.RS
.HP
Access to the class.
.HP
call [method]:    call a method of the current class/object
.HP
pointer:          get the pointer of the object
.HP
get [key]:        get the contend of a var from the object/class
.HP
set [key]:        set the contend of a var from the object/class
.HP
unset [key]:      remove a var from the object/class
.HP
isset [key]:      check if a var from the object/class is set
.HP
count:            get the count of vars from the object/class
.HP
key:              get the key of a var from the object/class var list
.HP
clear:            remove all vars from a object/class
.HP
.B $1
.I string
action (call,pointer,get,set,unset,isset)
.HP
.B $@
.I mixed
params
.HP

.RE

.TP
.B this()
.RS
.HP
Access to the object.
.HP
call [method]:    call a method of the current class/object
.HP
pointer:          get the pointer of the object
.HP
get [key]:        get the contend of a var from the object/class
.HP
set [key]:        set the contend of a var from the object/class
.HP
unset [key]:      remove a var from the object/class
.HP
isset [key]:      check if a var from the object/class is set
.HP
count:            get the count of vars from the object/class
.HP
key:              get the key of a var from the object/class var list
.HP
clear:            remove all vars from a object/class
.HP
.B $1
.I string
action (call,pointer,get,set,unset,isset)
.HP
.B $@
.I mixed
params
.HP

.RE

.TP
.B unserialize()
.RS
.HP
Unserialize a object.
.HP
.B $1
.I string
var name
.HP
.B $2
.I string
serialized data
.HP

.HP

.RE

.SH BASE CLASS METHODS
.TP
.B CLASS_Class___construct()
.RS
.HP
Constructor
.HP
Called on object creation (new)
.RE

.TP
.B CLASS_Class___destruct()
.RS
.HP
Destructor
.HP
Called on object destruction (remove)
.RE

.TP
.B CLASS_Class_dumpPropertys()
.RS
.HP
Dump propertys of a class/object.
.HP

.RE

.TP
.B CLASS_Class_getClass()
.RS
.HP
Get the class name.
.HP

.HP
.B &0
.I string
class name
.RE

.TP
.B CLASS_Class_getClassTrace()
.RS
.HP
Get the parent class name.
.HP

.HP
.B &0
.I string
class name
.RE

.TP
.B CLASS_Class_hasParentClass()
.RS
.HP
Check if the class has a parent.
.HP

.RE

.TP
.B CLASS_Class_isA()
.RS
.HP
Check if class is a instance of.
.HP

.RE

.TP
.B CLASS_Class___load()
.RS
.HP
Loader
.HP
Called on class loding
.RE

.TP
.B CLASS_Class___sleep()
.RS
.HP
Make object ready for sleep.
.HP
Called on object serialization (serialize)
.RE

.TP
.B CLASS_Class___wakeup()
.RS
.HP
Make object ready for wakeup.
.HP
Called on object unserialization (unserialize)
.RE

